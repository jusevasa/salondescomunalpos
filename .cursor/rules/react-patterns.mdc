---
alwaysApply: true
---

# Patrones React 19 + TypeScript

## Componentes
- Function components con TS; JSX automático
- Props interface: `{ComponentName}Props`
- Export default para componentes; tipos como named exports
- Usar y extender componentes en `src/components/ui` (button, dialog, table, sidebar, etc.)

## Hooks
- Server state: TanStack Query v5 (staleTime 5min, retry 1 por defecto)
- Client state: Zustand (auth y estados locales complejos)
- Hooks globales en `src/hooks`; por feature en `src/features/*/hooks`
- `useAuth()` inicializa `initializeAuth()` y expone `user`, `profile`, `isAuthenticated` y acciones

## Formularios
- React Hook Form + Zod
- Esquemas por feature o en `src/lib/validations`
- Integrar con `Form`, `FormField`, `FormItem`, `FormMessage` y controles UI

## Estilos
- Tailwind 4; variantes con `class-variance-authority` donde aplique
- No reimplementar estilos comunes; reutilizar componentes UI

## Routing y guards
- Declaración de rutas en `src/main.tsx` (React Router v7)
- `ProtectedRoute` aplica auth + roles (`allowedRoles`) y perfil activo
- `AdminLayout` envuelve páginas admin

## Alias y TS
- Alias `@` → `./src` (Vite y TS paths). Importar como `@/...`
- TS estricto, evitar `any`; early returns y manejo de errores explícito

## Nombres/archivos
- Componentes: PascalCase `.tsx`
- Hooks: camelCase `useXxx.ts`
- Servicios: camelCase `xxxService.ts` o `index.ts`
- Tipos: PascalCase/camelCase según semántica
